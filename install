#!/bin/sh

sudo pacman -S artix-archlinux-support
sudo pacman-key --populate archlinux

echo "" | sudo tee -a  /etc/pacman.conf
echo "# Arch" | sudo tee -a  /etc/pacman.conf
echo "[extra]" | sudo tee -a  /etc/pacman.conf
echo "Include = /etc/pacman.d/mirrorlist-arch" | sudo tee -a  /etc/pacman.conf
echo "" | sudo tee -a  /etc/pacman.conf
echo "[community]" | sudo tee -a  /etc/pacman.conf
echo "Include = /etc/pacman.d/mirrorlist-arch" | sudo tee -a  /etc/pacman.conf
echo "" | sudo tee -a  /etc/pacman.conf
echo "[multilib]" | sudo tee -a  /etc/pacman.conf
echo "Include = /etc/pacman.d/mirrorlist-arch" | sudo tee -a  /etc/pacman.conf
echo "" | sudo tee -a  /etc/pacman.conf

pkglist="./pkglist"
aurpkglist="./aur-pkglist"

echo "-----------------------------------------------------------"
echo "Creating .local/share"
echo "-----------------------------------------------------------"

mkdir -p $HOME/.local/share
# mkdir $HOME/.config
# mkdir $HOME/.cache
 
echo "-----------------------------------------------------------"
echo "Updating system and installing packages"
echo "-----------------------------------------------------------"

sudo pacman -Syu
sudo pacman -S - < "$pkglist"


echo "-----------------------------------------------------------"
echo "Installing yay"
echo "-----------------------------------------------------------"

git clone https://aur.archlinux.org/yay.git
cd yay
makepkg -si
cd ..
rm -rf yay

echo "-----------------------------------------------------------"
echo "Installing aur packages"
echo "-----------------------------------------------------------"

yay -S - < "$aurpkglist"


echo "-----------------------------------------------------------"
echo "Seting up ssh"
echo "-----------------------------------------------------------"

echo "Enter email: "
read email
ssh-keygen -t ed25519 -C "$email"
eval "$(ssh-agent -s)"
ssh-add "$HOME"/.ssh/id_ed25519

echo "-----------------------------------------------------------"
echo "Installing other suckless stuff"
echo "-----------------------------------------------------------"

git clone https://github.com/gaprop/st.git
mv st "$HOME"/.local/share/
cd "$HOME"/.local/share/st
sudo make clean install

# TODO: Might wanne remove this line
cd ~/my-os

git clone https://github.com/gaprop/dmenu.git
mv dmenu "$HOME"/.local/share/
cd "$HOME"/.local/share/dmenu
sudo make clean install

# TODO: Might wanne remove this line
cd ~/my-os

echo "-----------------------------------------------------------"
echo "Installing rust"
echo "-----------------------------------------------------------"

curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
rustup update

echo "-----------------------------------------------------------"
echo "Configuring packages"
echo "-----------------------------------------------------------"

git clone --separate-git-dir=$HOME/.local/share/dotfiles https://github.com/gaprop/dotfiles.git $HOME/myconf-tmp
rm -r $HOME/myconf-tmp

/usr/bin/git --git-dir=$HOME/.local/share/dotfiles/ --work-tree=$HOME restore ../.config

/usr/bin/git --git-dir=$HOME/.local/share/dotfiles/ --work-tree=$HOME restore ../.local

/usr/bin/git --git-dir=$HOME/.local/share/dotfiles/ --work-tree=$HOME restore ../.zprofile
# Old way, will be removed
# git clone https://github.com/gaprop/cooless-rice.git

chsh -s /bin/zsh

# echo "Copying config files to .config"
# cp -r cooless-rice/.config $HOME/
# echo "Copying binary files to .local/bin"
# cp -r cooless-rice/.local/bin $HOME/.local/

# echo "Setting up shell files"
# cp -r cooless-rice/.local/share/zsh "$HOME"/.local/share

echo "Creating xmonad directories"
mkdir "$HOME"/.local/share/xmonad
mkdir "$HOME"/.cache/xmonad
xmonad --recompile

echo "Installing plug and relevant packages for vim"
sh -c 'curl -flo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

sudo pip install pynvim

echo "-----------------------------------------------------------"
echo "Starting services"
echo "-----------------------------------------------------------"

sudo rc-update add alsasound
sudo rc-update add bluetoothd

echo "-----------------------------------------------------------"
echo "Cleaning up ~/"
echo "-----------------------------------------------------------"

# Instead of $HOME, you could probably just use the $XDG_* instead
mv "$HOME"/.cargo "$HOME"/.local/share
mv "$HOME"/.rustup "$HOME"/.local/share

mkdir -p "$HOME"/.config/pki/nssdb
mkdir -p "$HOME"/.local/share/pki/nssdb
mv "$HOME"/.pki/nssdb/pkcs11.txt "$HOME"/.config/pki/nssdb
mv "$HOME"/.pki/nssdb/cert9.db "$HOME"/.local/share/pki/nssdb
mv "$HOME"/.pki/nssdb/key4.db "$HOME"/.local/share/pki/nssdb
rm -r "$HOME"/.pki

mkdir -p "$HOME"/.cache/zsh

mkdir -p "$HOME"/.config/git
mv "$HOME"/.gitconfig "$HOME"/.config/git/config

# echo "-----------------------------------------------------------"
# echo "Remeber to set up ssh, there are things you have to manually"
# echo "-----------------------------------------------------------"
echo "-----------------------------------------------------------"
echo "Creating basic directories"
echo "-----------------------------------------------------------"

mkdir $HOME/Documents
mkdir $HOME/Books
mkdir $HOME/Downloads
mkdir $HOME/Music
mkdir $HOME/Pictures
mkdir $HOME/Vdeo

echo "-----------------------------------------------------------"
echo "Things you should remember"
echo "-----------------------------------------------------------"
echo "- Intall plugins in nvim with: :PlugInstall"
echo "- Setup ssh with github"
echo "- Change the dotfiles repo to use ssh instead"
